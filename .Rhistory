alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 6,
scales = c("free"), as.table = TRUE) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths
model_paths %>% select(condition) %>% distinct
model_paths %>% select(condition) %>% unique
model_paths %>% ungroup %>% select(condition) %>% unique
source("src/predictions/sample_path/simulate_sample_paths.R")
# Specifies simulation settings
settings <- list(models = c("independent", "normal", "t"),
smpl_size = 10,
seeds = c(1316048320, -1572737661, 195896225),
sigma = .1,
time_unit = 1e-3,
cores = 3)
# Simulates paths for the three models
timer <- proc.time()
paths <- with(data = settings,
expr = mapply(FUN = simul_paths, model = models, seed = seeds,
MoreArgs = list(smpl_size, sigma, time_unit, cores),
SIMPLIFY = FALSE))
timer <- proc.time() - timer
timer
save(paths, file = paste0("results/sample_path/paths2-", Sys.Date(),
".RData"), compress = "gzip")
#
model_paths <- calc_model_paths(paths, alpha = bounds, cores = cores) %>%
melt %>%
rename(state = value, response = L3, condition = L2, model = L1) %>%
mutate(graph = cut(x = condition, labels = FALSE,
breaks = 6)) %>%
group_by(response, condition, model) %>%
mutate(time = seq(from = 1, by = 1, length.out = n()))
model_paths
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 2, ncol = 6,
scales = c("free"), as.table = TRUE) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
setwd("~/Dropbox/Slava/Masters/")
source("src/predictions/sample_path/plot_mean_paths_full.R")
source("src/predictions/sample_path/plot_mean_paths.R")
load(file = "results/sample_path/paths2-2015-02-08.RData")
# Specifies plotting settings
settings <- list(cores = 3,
nrow = 6,
ncol = 2)
with(data = settings, expr = plot_mean_paths(paths = paths, cores = cores,
nrow = nrow, ncol = ncol,
nplots = nplots))
with(data = settings, expr = plot_mean_paths(paths = paths, cores = cores,
nrow = rows, ncol = cols))
with(data = settings, expr = plot_mean_paths(paths = paths, cores = cores,
rows = rows, cols = cols))
?facet_wrap
model_paths <- calc_model_paths(paths, alpha = bounds, cores = cores) %>%
melt %>%
rename(state = value, response = L3, condition = L2, model = L1) %>%
mutate(graph = cut(x = condition, labels = FALSE,
breaks = 6)) %>%
group_by(response, condition, model) %>%
mutate(time = seq(from = 1, by = 1, length.out = n()))
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_abline(yintercept = c(lower, upper), data = thresholds) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
thresholds <- data.frame(upper = rep(unique(ind_param$alpha),
each = 6),
lower = 0,
condition = seq_len(72),
graphs = rep(1:6, each = 12))
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_abline(yintercept = c(lower, upper), data = thresholds) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
thresholds
head(thresholds)
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(yintercept = c(lower, upper),
data = thresholds) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(yintercept = c(lower, upper),
data = alphas) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = alphas) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
xlim
?xlim
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
xlims <- data.frame(limit = c(rep(1500, 6), rep(150, 6)))
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = alphas) +
geom_vline(mapping = aes(x = limit), data = xlims) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
geom_vline
?geom_vline
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
alphas <- filter(thresholds, graphs == graph_index)
xlims <- data.frame(limit = c(rep(1500, 6), rep(150, 6)))
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = alphas) +
geom_vline(mapping = aes(xintercept = limit), data = xlims) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_vline(mapping = aes(xintercept = vert), data = limits) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
thresholds <- data.frame(upper = rep(unique(ind_param$alpha),
each = 6),
lower = 0,
condition = seq_len(72),
vert = c(rep(1500, 6), rep(150, 6)),
graphs = rep(1:6, each = 12))
thresholds
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = .) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_vline(mapping = aes(xintercept = vert), data = limits) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time > 1500)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_vline(mapping = aes(xintercept = vert), data = limits) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1500)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_vline(mapping = aes(xintercept = vert), data = limits) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line() +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
head(ind_param)
?geom_line
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line(aes(size = .5, alpha = .7)) +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line(aes(size = 1, alpha = .7)) +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line(aes(size = .05, alpha = .7)) +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line(aes(alpha = .7), size = .5) +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line(aes(alpha = .7), size = .1) +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line(aes(alpha = .7), size = 10) +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
model_paths %>% group_by(graph) %>%
do({graph_index <- select(., graph) %>% distinct %>% as.numeric
limits <- filter(thresholds, graphs == graph_index)
ts.graph <- ggplot(data = filter(., time < 1000)) +
aes(x = time, y = state,
group = interaction(response, condition, model),
color = model) +
facet_wrap(facets = ~condition, nrow = 6, ncol = 2,
scales = c("free"), as.table = TRUE) +
geom_hline(mapping = aes(yintercept = c(lower, upper)),
data = limits) +
geom_line(alpha = .5, size = .1) +
theme_bw() + ylab("Evidence") + xlab("Time (ms)")
ggsave(ts.graph,
filename = paste0("results/sample_path/path-plot-corr",
unique(.$graph), "-", Sys.Date(), ".pdf"))
})
source("src/predictions/sample_path/calculate_weibull.R")
weibull_param <- data.frame(lower = c(-.352, -.565), upper = c(.329, .511),
scale = c(.526, .521), shape = c(4.413, 5.227),
row.names = c("acc", "spd"))
# brightness covariate
bright <- data.frame(prop = c(.5, .563, .625, .688, .750, .813))
# drift rate (reflects effect of s/a and brightness)
source("src/predictions/sample_path/calculate_weibull.R")
nu <- as.data.frame(t(data.frame(
acc = as.vector(weibull(bright, weibull_param["acc", "lower"],
weibull_param["acc", "upper"],
weibull_param["acc", "scale"],
weibull_param["acc", "shape"])),
spd = as.vector(weibull(bright, weibull_param["spd", "lower"],
weibull_param["spd", "upper"],
weibull_param["spd", "scale"],
weibull_param["spd", "shape"])))))
colnames(nu) <- paste("prop", as.character(1:6), sep = "")
nu
bright <- data.frame(prop = c(.5, .525, .575, .625, .650, .700))
nu <- as.data.frame(t(data.frame(
acc = as.vector(weibull(bright, weibull_param["acc", "lower"],
weibull_param["acc", "upper"],
weibull_param["acc", "scale"],
weibull_param["acc", "shape"])),
spd = as.vector(weibull(bright, weibull_param["spd", "lower"],
weibull_param["spd", "upper"],
weibull_param["spd", "scale"],
weibull_param["spd", "shape"])))))
colnames(nu) <- paste("prop", as.character(1:6), sep = "")
nu
bright <- data.frame(prop = c(.5, .525, .55, .6, .625, .65))
nu <- as.data.frame(t(data.frame(
acc = as.vector(weibull(bright, weibull_param["acc", "lower"],
weibull_param["acc", "upper"],
weibull_param["acc", "scale"],
weibull_param["acc", "shape"])),
spd = as.vector(weibull(bright, weibull_param["spd", "lower"],
weibull_param["spd", "upper"],
weibull_param["spd", "scale"],
weibull_param["spd", "shape"])))))
colnames(nu) <- paste("prop", as.character(1:6), sep = "")
nu
bright <- data.frame(prop = c(.5, .525, .55, .6, .675, .8))
nu <- as.data.frame(t(data.frame(
acc = as.vector(weibull(bright, weibull_param["acc", "lower"],
weibull_param["acc", "upper"],
weibull_param["acc", "scale"],
weibull_param["acc", "shape"])),
spd = as.vector(weibull(bright, weibull_param["spd", "lower"],
weibull_param["spd", "upper"],
weibull_param["spd", "scale"],
weibull_param["spd", "shape"])))))
colnames(nu) <- paste("prop", as.character(1:6), sep = "")
nu
1:72
1:6 + 6
1:6 + c(12, 24, 36)
c(1:6 + 12, 1:6 + 24, 1:6 + 36)
c(1:6, 1:6 + 12, 1:6 + 24, 1:6 + 36)
c(1, 3) %in% 1:5
c(1, 3, 10) %in% 1:5
?%in%
?'%in%'
dev.new()
options()
